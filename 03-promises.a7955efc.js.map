{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,UAAYC,SAASC,cAAc,YACnCC,OAAOF,SAASC,cAAc,SAE9BC,OAAOC,iBAAiB,UAAU,SAACC,GACjCA,EAAIC,iBACJ,IAAMC,EAAS,IAAIC,SAASL,QAE5BM,EAAQF,EAASG,IAAI,UAAWH,EAASG,IAAI,UAAUC,MAAK,SAAAC,GAC1DC,EAAAf,GAASgB,OAAOC,QAAQH,E,IACvBI,OAAM,SAAAC,GACPJ,EAAAf,GAASgB,OAAOI,QAAQD,E,OAG5B,IAAMR,EAAU,SAAuBU,EAAUC,GAC/C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACiBC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAItDG,EAAO,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAGrDA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nsubmitBtn = document.querySelector('[submit]')\nformEl=document.querySelector('.form')\n\nformEl.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  const formData=new FormData(formEl)\n  // createPromise(formData.get('amount'),formData.get('delay'))\n  promise(formData.get('amount'), formData.get('delay')).then(value => {\n    Notiflix.Notify.success(value);\n  }).catch(error => {\n    Notiflix.Notify.failure(error);\n  })\n})\nconst promise = function createPromise(position, delay){\n  return new Promise((resolve, reject)=>{\n    setTimeout(() => {\n          const shouldResolve = Math.random() > 0.3;\n          if (shouldResolve) {\n            // Fulfill\n            resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n              ;\n          } else {\n            // Reject\n            reject(`❌ Rejected promise ${position} in ${delay}ms`)\n              ;\n          }\n      }, delay)\n\n  })\n}\n"],"names":["$iU1Pc","parcelRequire","submitBtn","document","querySelector","formEl","addEventListener","evt","preventDefault","formData","FormData","$ce04d3a99e08e73b$var$promise","get","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat"],"version":3,"file":"03-promises.a7955efc.js.map"}