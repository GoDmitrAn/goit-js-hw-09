{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,UAAYC,SAASC,cAAc,YACnCC,OAAOF,SAASC,cAAc,SAE9BC,OAAOC,iBAAiB,UAAWC,IACjCA,EAAIC,iBACJ,MAAMC,EAAS,IAAIC,SAASL,QAE5BM,EAAQF,EAASG,IAAI,UAAWH,EAASG,IAAI,UAAUC,MAAKC,IAC1DC,EAAAf,GAASgB,OAAOC,QAAQH,EAAM,IAC7BI,OAAMC,IACPJ,EAAAf,GAASgB,OAAOI,QAAQD,EAAM,GAC9B,IAEJ,MAAMR,EAAU,SAAuBU,EAAUC,GAC/C,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACiBC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBH,QAAiBC,OAI9CG,EAAO,sBAAoBJ,QAAeC,MAAU,GAGvDA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nsubmitBtn = document.querySelector('[submit]')\nformEl=document.querySelector('.form')\n\nformEl.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  const formData=new FormData(formEl)\n  // createPromise(formData.get('amount'),formData.get('delay'))\n  promise(formData.get('amount'), formData.get('delay')).then(value => {\n    Notiflix.Notify.success(value);\n  }).catch(error => {\n    Notiflix.Notify.failure(error);\n  })\n})\nconst promise = function createPromise(position, delay){\n  return new Promise((resolve, reject)=>{\n    setTimeout(() => {\n          const shouldResolve = Math.random() > 0.3;\n          if (shouldResolve) {\n            // Fulfill\n            resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n              ;\n          } else {\n            // Reject\n            reject(`❌ Rejected promise ${position} in ${delay}ms`)\n              ;\n          }\n      }, delay)\n\n  })\n}\n"],"names":["$eWCmQ","parcelRequire","submitBtn","document","querySelector","formEl","addEventListener","evt","preventDefault","formData","FormData","$47d4ff9957288465$var$promise","get","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","position","delay","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.aa2230e2.js.map"}